---
// Components
import DownloadButton from '../buttons/DownloadButton'
import RenderAppLogo from '../renders/RenderAppLogo.astro'
import RenderDevelopmentStatus from '../renders/RenderDevelopmentStatus.astro'
import RenderOS from '../renders/RenderOS.astro'
import RenderSocialNetwork from '../renders/RenderSocialNetwork.astro'

// Types
import type { JsonDescriptions } from '@/types/json'

// i18n
import { getJson, getLangFromUrl } from '@/i18n/utils'

// Services
import { getRepoUrl } from '@/services/get-repo-url'

// Utils
import { getLoadingStrategy } from '@/utils/loading'

interface Props {
  alternativeText: string
  descriptions: JsonDescriptions
  githubRepoName: string
  logoURL: string
  name: string
  osArray: string[]
  i18nURL: URL
  inDevelopment: boolean
  index?: number
}

const {
  alternativeText,
  descriptions,
  githubRepoName,
  logoURL,
  name,
  osArray,
  i18nURL,
  inDevelopment,
  index = 0
} = Astro.props

const userAgent = Astro.request.headers.get('user-agent') ?? ''

const loadingStrategy = getLoadingStrategy({ userAgent, index })

const lang = getLangFromUrl(i18nURL)

const { socialNetworks, labels } = getJson(lang)

const repoUrl = await getRepoUrl(githubRepoName)
---

<article
  class={`
    bg-white rounded-lg shadow-md m-1.5 p-6 
    w-[calc(100%-10rem)] max-sm:w-[calc(100%-3rem)]
  `}
>
  <h1 class="text-xl font-semibold text-center text-balance mb-3">
    {name}
  </h1>

  <div class="mb-3">
    <RenderDevelopmentStatus {i18nURL} {inDevelopment} />
  </div>

  <p class="text-center text-pretty mb-3">{descriptions[lang]}</p>

  <div class="mb-3">
    <RenderOS {osArray} {i18nURL} {inDevelopment} />
  </div>

  <div class="mb-3">
    <RenderAppLogo {logoURL} {alternativeText} {index} />
  </div>

  <div class="flex flex-row items-center justify-center pt-2 gap-4">
    <div class="flex flex-col items-center justify-center">
      <p class="text-center text-pretty">
        {labels.buttons['source-code']}
      </p>
      <RenderSocialNetwork
        href={repoUrl}
        imageURL="/social-networks/source-code.svg"
        altText={socialNetworks.altText['source-code']}
        loading={loadingStrategy}
      />
    </div>

    <DownloadButton {githubRepoName} {lang} {inDevelopment} client:load />
  </div>
</article>
