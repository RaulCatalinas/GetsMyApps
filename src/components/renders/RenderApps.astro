---
// Components
import AppCard from '../cards/AppCard.astro'

// Types
import type { AppWithOutID } from '@/types/app'

// i18n
import { getJson, getLangFromUrl } from '@/i18n/utils'

// Icons
import DownArrowIcon from '@/icons/arrows/DownArrowIcon.astro'

interface Props {
  apps: AppWithOutID[]
  i18nURL: URL
}

const { apps, i18nURL } = Astro.props

const lang = getLangFromUrl(i18nURL)

const { renderApps } = getJson(lang)
---

<div class="flex flex-col items-center justify-center min-h-screen relative">
  {
    apps.length === 0 && (
      <h1 class="text-white text-center text-pretty text-4xl font-sans m-4 shadow-md">
        {renderApps.error}
      </h1>
    )
  }
  {
    apps.length > 0 && (
      <div class="grid grid-cols-2 max-sm:grid-cols-1 mt-4 gap-4 place-items-center">
        {apps.map(
          (
            {
              alternativeText,
              descriptions,
              githubRepoName,
              logoURL,
              name,
              osArray,
              inDevelopment
            },
            index
          ) => (
            <AppCard
              {alternativeText}
              {descriptions}
              {githubRepoName}
              {logoURL}
              {name}
              {osArray}
              {i18nURL}
              {inDevelopment}
              {index}
            />
          )
        )}

        <div
          class="
            fixed 
            bottom-8 
            left-1/2 
            transform 
            -translate-x-1/2
            bg-white/20 
            backdrop-blur-sm 
            rounded-full 
            p-4
            text-white
            animate-bounce
            cursor-pointer
            hover:bg-white/30
            hover:scale-110
            transition-all
            duration-300
            shadow-lg
            border
            border-white/30
            z-10
          "
          id="scroll-hint"
        >
          <div class="w-6 h-6 text-white">
            <DownArrowIcon />
          </div>
        </div>
      </div>
    )
  }
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const scrollHint = document.getElementById('scroll-hint')

    if (scrollHint) {
      scrollHint.addEventListener('click', () => {
        window.scrollBy({
          top: window.innerHeight * 1,
          behavior: 'smooth'
        })
      })

      // Hide on scroll
      window.addEventListener('scroll', () => {
        if (window.scrollY > 100) {
          scrollHint.style.opacity = '0'
          scrollHint.style.transform = 'translateX(-50%) translateY(20px)'
        } else {
          scrollHint.style.opacity = '1'
          scrollHint.style.transform = 'translateX(-50%) translateY(0)'
        }
      })
    }
  })
</script>
